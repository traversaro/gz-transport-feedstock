context:
  component_name: transport
  repo_name: gz-${{ component_name }}
  version: 13.4.1
  major_version: 13
  name: ${{ repo_name }}${{ major_version }}
  component_version: ${{ component_name }}${{ major_version }}
  cxx_name: lib${{ name }}
  python_name: ${{ name }}-python

recipe:
  name: ${{ name }}
  version: ${{ version }}

source:
  - url: https://github.com/gazebosim/${{ repo_name }}/archive/${{ repo_name }}${{ major_version }}_${{ version }}.tar.gz
    sha256: 2aac8fcfd525091648f405738e95d5d8b55b87767e6cb74afde6390a5fe924c5
    patches:
      - 619.patch

build:
  number: 2

outputs:
  - package:
      name: ${{ cxx_name }}
    build:
      script:
        - if: unix
          then: build_cxx.sh
        - if: win
          then: bld_cxx.bat
    requirements:
      build:
        - ${{ compiler('cxx') }}
        - ${{ compiler('c') }}
        - ${{ stdlib("c") }}
        - ninja
        - cmake
        - pkg-config
      host:
        - libgz-cmake3
        - libgz-msgs10 >=10.3.2
        - libgz-tools2
        - libgz-utils2
        - cppzmq
        - zeromq
        - if: linux
          then:
            - libuuid
        - libabseil
        - libprotobuf
        - sqlite
      run:
        - cppzmq
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
          - if: linux
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.so
          - if: osx
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.dylib
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1

  - package:
      name: ${{ python_name }}
    build:
      script:
        - if: unix
          then: build_py.sh
        - if: win
          then: bld_py.bat
    requirements:
      build:
        - ${{ compiler('c') }}
        - ${{ stdlib("c") }}
        - ${{ compiler('cxx') }}
        - ninja
        - cmake
        - pkg-config
        - if: build_platform != target_platform
          then:
            - python ${{ python_min }}.*
            - cross-python_${{ target_platform }}
            - pybind11
            - pybind11-abi
            - pytest
      host:
        - ${{ pin_subpackage(cxx_name, exact=True) }}
        - python ${{ python_min }}.*
        - pybind11
        - pybind11-abi
        - pytest
        - gz-msgs10-python
        # Workaround for errors of type
        # package libgz-sim7-<..> requires <...>, but none of the providers can be installed
        - libabseil
        - libprotobuf
        - libgz-msgs10 >=10.3.2
      run:
        - ${{ pin_subpackage(cxx_name, exact=True) }}
        - python
        - gz-msgs10-python
    tests:
      - python:
          imports:
            - gz.transport13

  - package:
      name: ${{ name }}
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=True) }}
        - ${{ pin_subpackage(python_name, upper_bound='x.x.x') }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
          - if: linux
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.so
          - if: osx
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.dylib
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1
      - python:
          imports:
            - gz.transport13


  # Versionless dummy packages, see https://github.com/conda-forge/gz-sim-feedstock/issues/102
  - package:
      name: libgz-${{ component_name }}
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-transport', upper_bound='x') }}
    tests:
      - script:
          - cmake-package-check gz-${{ component_name }}${{ major_version }}
        requirements:
          run:
            - cmake-package-check
            - ${{ compiler('c') }}
            - ${{ compiler('cxx') }}

  - package:
      name: gz-${{ component_name }}-python
    requirements:
      run:
        - ${{ pin_subpackage(python_name, upper_bound='x.x.x') }}
    tests:
      - python:
          imports:
            - gz.${{ component_name }}${{ major_version }}

  - package:
      name: gz-${{ component_name }}
    requirements:
      run:
        - ${{ pin_subpackage(name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-transport', upper_bound='x') }}
    tests:
      - script:
          - cmake-package-check gz-${{ component_name }}${{ major_version }}
        requirements:
          run:
            - cmake-package-check
            - ${{ compiler('c') }}
            - ${{ compiler('cxx') }}
      - python:
          imports:
            - gz.${{ component_name }}${{ major_version }}


about:
  homepage: https://github.com/gazebosim/${{ repo_name }}
  license: Apache-2.0
  license_file: LICENSE
  summary: Transport library for component communication based on publication/subscription and service calls.

extra:
  feedstock-name: ${{ repo_name }}
  recipe-maintainers:
    - wolfv
    - traversaro
    - j-rivero
